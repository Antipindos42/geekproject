'''
1. Создать список и заполнить его элементами различных типов данных. 
Реализовать скрипт проверки типа данных каждого элемента. Использовать функцию type() для проверки типа. 
Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.
'''

super_list = [100, 'Hello', None, True, 2.3, (2, 3)]
for i in super_list:
    print(f'{i} is {type(i)}')
    
    
 '''
 2. Для списка реализовать обмен значений соседних элементов, т.е. 
 Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д. 
 При нечетном количестве элементов последний сохранить на своем месте. 
 Для заполнения списка элементов необходимо использовать функцию input().
 '''
 
el_count = int(input("Введите количество элементов списка "))
my_list = []
i = 0
while i < el_count:
    my_list.append(input("Введите следующее значение списка "))
    i += 1
j = 0
for i in range(int(len(my_list) / 2)):
    my_list[j], my_list[j + 1] = my_list[j + 1], my_list[j]
    j += 2
print(my_list)


 '''
3. Пользователь вводит месяц в виде целого числа от 1 до 12. 
Сообщить к какому времени года относится месяц (зима, весна, лето, осень). 
Напишите решения через list и через dict.
 '''
#dict
seasons: dict[str, tuple[int, int, int]] = {'Winter': (1, 2, 12),
          'Spring': (3, 4, 5),
          'Summer': (6, 7, 8),
          'Autumn': (9, 10, 11)}

month = int(input('Choose a month: '))
for key in seasons.keys():
    if month in seasons[key]:
        print(key)
else:
    print('ERROR')


# list

month = int(input('Choose a month: '))
if month in (1, 2, 12):
    print('winter')
elif month in (3, 4, 5):
    print('spring')
elif month in (6, 7, 8):
    print('summer')
elif month in (9, 10, 11):
    print('fall')
else:
    print('ERROR')

4.

